=============================== bash cell | validate tro declaration with pyshacl (without comments) ===============================

python3 << END_PYTHON

# It allows any number of comments for each TRO
from pyshacl import validate

tro_jsonld = """
{
    "@context": [{
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
        "trov": "https://w3id.org/trace/2023/05/trov#",
        "@base": "https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/"
    }],
    
    "@graph": [
        { "@id": "tro", "@type": "trov:TransparentResearchObject" }
    ]
}
"""

with open("data/tro.schema.ttl") as fin:
    tro_schema = fin.read()

r = validate(data_graph=tro_jsonld,
      shacl_graph=tro_schema,
      data_graph_format="json-ld",
      inference='rdfs',
      debug=True)
conforms, results_graph, results_text = r

print("results_text: ", results_text)

END_PYTHON

----------------------------------------------------------- cell outputs -----------------------------------------------------------
results_text:  Validation Report
Conforms: False
Results (3):
Constraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):
	Severity: sh:Violation
	Source Shape: [ sh:maxCount Literal("1", datatype=xsd:integer) ; sh:minCount Literal("1", datatype=xsd:integer) ; sh:node schema1:TrsShape ; sh:path trov:wasAssembledBy ]
	Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/tro>
	Result Path: trov:wasAssembledBy
	Message: Less than 1 values on <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/tro>->trov:wasAssembledBy
Constraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):
	Severity: sh:Violation
	Source Shape: [ sh:minCount Literal("1", datatype=xsd:integer) ; sh:node schema1:CompShape ; sh:path trov:hasComposition ]
	Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/tro>
	Result Path: trov:hasComposition
	Message: Less than 1 values on <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/tro>->trov:hasComposition
Constraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):
	Severity: sh:Violation
	Source Shape: [ sh:minCount Literal("1", datatype=xsd:integer) ; sh:node schema1:ArrShape ; sh:path trov:hasArrangement ]
	Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/tro>
	Result Path: trov:hasArrangement
	Message: Less than 1 values on <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/tro>->trov:hasArrangement

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


=============================== bash cell | validate tro declaration with pyshacl (multiple trs pk) ================================

python3 << END_PYTHON

from pyshacl import validate

tro_jsonld = """
{
    "@context": [{
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
        "trov": "https://w3id.org/trace/2023/05/trov#",
        "@base": "https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/"
    }],
    
    "@graph": [
        { "@id": "trs", "@type": "trov:TrustedResearchSystem" },
        { "@id": "trs", "trov:publicKey": "trs.pk.1" },
        { "@id": "trs", "trov:publicKey": "trs.pk.2" }
    ]
}
"""

with open("data/tro.schema.ttl") as fin:
    tro_schema = fin.read()

r = validate(data_graph=tro_jsonld,
      shacl_graph=tro_schema,
      data_graph_format="json-ld",
      inference='rdfs',
      debug=True)
conforms, results_graph, results_text = r

print("results_text: ", results_text)

END_PYTHON

----------------------------------------------------------- cell outputs -----------------------------------------------------------
results_text:  Validation Report
Conforms: False
Results (1):
Constraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):
	Severity: sh:Violation
	Source Shape: [ sh:datatype xsd:string ; sh:maxCount Literal("1", datatype=xsd:integer) ; sh:minCount Literal("1", datatype=xsd:integer) ; sh:path trov:publicKey ]
	Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/trs>
	Result Path: trov:publicKey
	Message: More than 1 values on <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/trs>->trov:publicKey

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


=============================== bash cell | validate tro declaration with pyshacl (multiple tsa pk) ================================

python3 << END_PYTHON

from pyshacl import validate

tro_jsonld = """
{
    "@context": [{
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
        "trov": "https://w3id.org/trace/2023/05/trov#",
        "@base": "https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/"
    }],
    
    "@graph": [{
        "@id": "tsa", "@type": "trov:TimeStampingAuthority" },
        { "@id": "tsa", "trov:publicKey": "tsa.pk.1" },
        { "@id": "tsa", "trov:publicKey": "tsa.pk.2" }
    ]
}
"""

with open("data/tro.schema.ttl") as fin:
    tro_schema = fin.read()

r = validate(data_graph=tro_jsonld,
      shacl_graph=tro_schema,
      data_graph_format="json-ld",
      inference='rdfs',
      debug=True)
conforms, results_graph, results_text = r

print("results_text: ", results_text)

END_PYTHON

----------------------------------------------------------- cell outputs -----------------------------------------------------------
results_text:  Validation Report
Conforms: False
Results (1):
Constraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):
	Severity: sh:Violation
	Source Shape: [ sh:datatype xsd:string ; sh:maxCount Literal("1", datatype=xsd:integer) ; sh:minCount Literal("1", datatype=xsd:integer) ; sh:path trov:publicKey ]
	Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/tsa>
	Result Path: trov:publicKey
	Message: More than 1 values on <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/tsa>->trov:publicKey

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


==================== bash cell | validate tro declaration with pyshacl (multiple fingerprints per composition) =====================

python3 << END_PYTHON

from pyshacl import validate

tro_jsonld = """
{
    "@context": [{
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
        "trov": "https://w3id.org/trace/2023/05/trov#",
        "@base": "https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/"
    }],
    
    "@graph": [{
        "trov:hasComposition":
        {
            "@id": "composition/1",
            "@type": "trov:ArtifactComposition",
        
             "trov:hasFingerprint":
            {
                "@id": "fp1",
                "@type": "trov:CompositionFingerprint",
                "trov:sha256": "sha256.fp1"
            }
        }
    },
    {
        "@id": "composition/1", 
        "trov:hasFingerprint": {
            "@id": "fp2",
            "trov:sha256": "sha256.fp2"
        }
    }]
}
"""

with open("data/tro.schema.ttl") as fin:
    tro_schema = fin.read()

r = validate(data_graph=tro_jsonld,
      shacl_graph=tro_schema,
      data_graph_format="json-ld",
      inference='rdfs',
      debug=True)
conforms, results_graph, results_text = r

print("results_text: ", results_text)

END_PYTHON

----------------------------------------------------------- cell outputs -----------------------------------------------------------
results_text:  Validation Report
Conforms: False
Results (2):
Constraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):
	Severity: sh:Violation
	Source Shape: [ sh:maxCount Literal("1", datatype=xsd:integer) ; sh:minCount Literal("1", datatype=xsd:integer) ; sh:node schema1:FingerprintShape ; sh:path trov:hasFingerprint ]
	Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1>
	Result Path: trov:hasFingerprint
	Message: More than 1 values on <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1>->trov:hasFingerprint
Constraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):
	Severity: sh:Violation
	Source Shape: [ sh:minCount Literal("1", datatype=xsd:integer) ; sh:node schema1:ArtifactShape ; sh:path trov:hasArtifact ]
	Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1>
	Result Path: trov:hasArtifact
	Message: Less than 1 values on <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1>->trov:hasArtifact

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


======================= bash cell | validate tro declaration with pyshacl (multiple sha256 per fingerprint) ========================

python3 << END_PYTHON

from pyshacl import validate

tro_jsonld = """
{
    "@context": [{
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
        "trov": "https://w3id.org/trace/2023/05/trov#",
        "@base": "https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/"
    }],
    
    "@graph": [{
        "trov:hasComposition":
        {
            "@id": "composition/1",
            "@type": "trov:ArtifactComposition",
        
            "trov:hasFingerprint":
            {
                "@id": "fp1",
                "@type": "trov:CompositionFingerprint",
                "trov:sha256": "sha256.fp1"
            }
        }
    },
    { "@id": "fp1", "trov:sha256": "sha256.fp2" }
    ]
}
"""

with open("data/tro.schema.ttl") as fin:
    tro_schema = fin.read()

r = validate(data_graph=tro_jsonld,
      shacl_graph=tro_schema,
      data_graph_format="json-ld",
      inference='rdfs',
      debug=True)
conforms, results_graph, results_text = r

print("results_text: ", results_text)

END_PYTHON

----------------------------------------------------------- cell outputs -----------------------------------------------------------
results_text:  Validation Report
Conforms: False
Results (3):
Constraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):
	Severity: sh:Violation
	Source Shape: [ sh:maxCount Literal("1", datatype=xsd:integer) ; sh:minCount Literal("1", datatype=xsd:integer) ; sh:node schema1:FingerprintShape ; sh:path trov:hasFingerprint ]
	Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1>
	Value Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/fp1>
	Result Path: trov:hasFingerprint
	Message: Value does not conform to Shape schema1:FingerprintShape. See details for more information.
	Details:
		Constraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):
			Severity: sh:Violation
			Source Shape: [ sh:datatype xsd:string ; sh:maxCount Literal("1", datatype=xsd:integer) ; sh:message Literal("*** Each fingerprint should have EXACTLY ONE sha256 with String format ***") ; sh:minCount Literal("1", datatype=xsd:integer) ; sh:path trov:sha256 ]
			Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/fp1>
			Result Path: trov:sha256
			Message: *** Each fingerprint should have EXACTLY ONE sha256 with String format ***
Constraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):
	Severity: sh:Violation
	Source Shape: [ sh:minCount Literal("1", datatype=xsd:integer) ; sh:node schema1:ArtifactShape ; sh:path trov:hasArtifact ]
	Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1>
	Result Path: trov:hasArtifact
	Message: Less than 1 values on <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1>->trov:hasArtifact
Constraint Violation in MaxCountConstraintComponent (http://www.w3.org/ns/shacl#MaxCountConstraintComponent):
	Severity: sh:Violation
	Source Shape: [ sh:datatype xsd:string ; sh:maxCount Literal("1", datatype=xsd:integer) ; sh:message Literal("*** Each fingerprint should have EXACTLY ONE sha256 with String format ***") ; sh:minCount Literal("1", datatype=xsd:integer) ; sh:path trov:sha256 ]
	Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/fp1>
	Result Path: trov:sha256
	Message: *** Each fingerprint should have EXACTLY ONE sha256 with String format ***

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


==================== bash cell | validate tro declaration with pyshacl (composition with at least one artifact) ====================

python3 << END_PYTHON

from pyshacl import validate

tro_jsonld = """
{
    "@context": [{
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
        "trov": "https://w3id.org/trace/2023/05/trov#",
        "@base": "https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/"
    }],
    
    "@graph": [{
        "trov:hasComposition": [
        {
            "@id": "composition/1",
            "@type": "trov:ArtifactComposition",

            "trov:hasFingerprint":
            {
                "@id": "fp1",
                "@type": "trov:CompositionFingerprint",
                "trov:sha256": "sha256.fp1"
            },

            "trov:hasArtifact": [
            {
                "@id": "composition/1/artifact/1",
                "@type": "trov:ResearchArtifact",
                "trov:mimeType": "text/plain",
                "trov:sha256": "art.sha256.1"
            }]
        },
        { 
            "@id": "composition/2", 
            "@type": "trov:ArtifactComposition",
          
            "trov:hasFingerprint":
            {
                "@id": "fp2",
                "@type": "trov:CompositionFingerprint",
                "trov:sha256": "sha256.fp2"
            }
        }]
    }]
}
"""

with open("data/tro.schema.ttl") as fin:
    tro_schema = fin.read()

r = validate(data_graph=tro_jsonld,
      shacl_graph=tro_schema,
      data_graph_format="json-ld",
      inference='rdfs',
      debug=True)
conforms, results_graph, results_text = r

print(results_text)

END_PYTHON

----------------------------------------------------------- cell outputs -----------------------------------------------------------
Validation Report
Conforms: False
Results (1):
Constraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):
	Severity: sh:Violation
	Source Shape: [ sh:minCount Literal("1", datatype=xsd:integer) ; sh:node schema1:ArtifactShape ; sh:path trov:hasArtifact ]
	Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/2>
	Result Path: trov:hasArtifact
	Message: Less than 1 values on <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/2>->trov:hasArtifact

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


=== bash cell | validate tro declaration with pyshacl (arrangement links to a valid artifact) and validate error msg with SPARQL ===

python3 << END_PYTHON

from pyshacl import validate

tro_jsonld = """
{
    "@context": [{
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
        "trov": "https://w3id.org/trace/2023/05/trov#",
        "@base": "https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/"
    }],
    
    "@graph": [{
        "trov:hasComposition": [
        {
            "@id": "composition/1",
            "@type": "trov:ArtifactComposition",

            "trov:hasFingerprint":
            {
                "@id": "fp1",
                "@type": "trov:CompositionFingerprint",
                "trov:sha256": "sha256.fp1"
            },

            "trov:hasArtifact": [
            {
                "@id": "composition/1/artifact/1",
                "@type": "trov:ResearchArtifact",
                "trov:sha256": "art.sha256.1"
            }]
        }],
        "trov:hasArrangement": {
        "@id": "arrangement/1",
        "@type": "trov:ArtifactArrangement",
        "trov:hasLocus": [
            {
                "@id": "arrangement/1/locus/1",
                "@type": "trov:ArtifactLocus",
                "trov:hasArtifact": { "@id": "composition/1/artifact/1" },
                "trov:hasLocation": "filepath1"
            },
            {
                "@id": "arrangement/1/locus/2",
                "@type": "trov:ArtifactLocus",
                "trov:hasArtifact": { "@id": "composition/1/artifact/100" },
                "trov:hasLocation": "filepath2"
            }]
        }
    }]
}
"""

with open("data/tro.schema.ttl") as fin:
    tro_schema = fin.read()

r = validate(data_graph=tro_jsonld,
      shacl_graph=tro_schema,
      data_graph_format="json-ld",
      inference='rdfs',
      debug=True)
conforms, results_graph, results_text = r

print(results_text)

print("***"*15)
# Show triples
for s,p,o in results_graph:
    print(s, p, o)
print("***"*15)

q = """
    ASK {   
        ?node ?p "Value does not have class trov:ResearchArtifact" .
    }
"""

res = bool(results_graph.query(q))
print("Validate error message: " + ("PASS" if res else "FAIL"))

END_PYTHON

----------------------------------------------------------- cell outputs -----------------------------------------------------------
Validation Report
Conforms: False
Results (2):
Constraint Violation in ClassConstraintComponent (http://www.w3.org/ns/shacl#ClassConstraintComponent):
	Severity: sh:Violation
	Source Shape: [ sh:class trov:ResearchArtifact ; sh:maxCount Literal("1", datatype=xsd:integer) ; sh:minCount Literal("1", datatype=xsd:integer) ; sh:path trov:hasArtifact ]
	Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1/locus/2>
	Value Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1/artifact/100>
	Result Path: trov:hasArtifact
	Message: Value does not have class trov:ResearchArtifact
Constraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):
	Severity: sh:Violation
	Source Shape: [ sh:minCount Literal("1", datatype=xsd:integer) ; sh:node schema1:LocusShape ; sh:path trov:hasLocus ]
	Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1>
	Value Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1/locus/2>
	Result Path: trov:hasLocus
	Message: Value does not conform to Shape schema1:LocusShape. See details for more information.
	Details:
		Constraint Violation in ClassConstraintComponent (http://www.w3.org/ns/shacl#ClassConstraintComponent):
			Severity: sh:Violation
			Source Shape: [ sh:class trov:ResearchArtifact ; sh:maxCount Literal("1", datatype=xsd:integer) ; sh:minCount Literal("1", datatype=xsd:integer) ; sh:path trov:hasArtifact ]
			Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1/locus/2>
			Value Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1/artifact/100>
			Result Path: trov:hasArtifact
			Message: Value does not have class trov:ResearchArtifact

*********************************************
N0b9fa55de7fa459ebeea155c56f75ebe http://www.w3.org/ns/shacl#resultPath https://w3id.org/trace/2023/05/trov#hasArtifact
N0b9fa55de7fa459ebeea155c56f75ebe http://www.w3.org/ns/shacl#focusNode https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1/locus/2
Nc33bb3fe40194a878ab0a6c697ccc466 http://www.w3.org/ns/shacl#resultSeverity http://www.w3.org/ns/shacl#Violation
n8b1b8b4edc7c4d95b089f390198e1e04b14 http://www.w3.org/ns/shacl#minCount 1
Nc33bb3fe40194a878ab0a6c697ccc466 http://www.w3.org/ns/shacl#focusNode https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1
N0b9fa55de7fa459ebeea155c56f75ebe http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://www.w3.org/ns/shacl#ValidationResult
Nbe8d126295fd499fa238071b00acbc97 http://www.w3.org/ns/shacl#sourceShape n8b1b8b4edc7c4d95b089f390198e1e04b15
n8b1b8b4edc7c4d95b089f390198e1e04b14 http://www.w3.org/ns/shacl#path https://w3id.org/trace/2023/05/trov#hasLocus
N0b9fa55de7fa459ebeea155c56f75ebe http://www.w3.org/ns/shacl#sourceConstraintComponent http://www.w3.org/ns/shacl#ClassConstraintComponent
n8b1b8b4edc7c4d95b089f390198e1e04b15 http://www.w3.org/ns/shacl#class https://w3id.org/trace/2023/05/trov#ResearchArtifact
N0b9fa55de7fa459ebeea155c56f75ebe http://www.w3.org/ns/shacl#resultSeverity http://www.w3.org/ns/shacl#Violation
Nbe8d126295fd499fa238071b00acbc97 http://www.w3.org/ns/shacl#resultMessage Value does not have class trov:ResearchArtifact
n8b1b8b4edc7c4d95b089f390198e1e04b14 http://www.w3.org/ns/shacl#node http://schema.org/LocusShape
n8b1b8b4edc7c4d95b089f390198e1e04b15 http://www.w3.org/ns/shacl#minCount 1
N0b9fa55de7fa459ebeea155c56f75ebe http://www.w3.org/ns/shacl#sourceShape n8b1b8b4edc7c4d95b089f390198e1e04b15
Nbe8d126295fd499fa238071b00acbc97 http://www.w3.org/ns/shacl#value https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1/artifact/100
Nc33bb3fe40194a878ab0a6c697ccc466 http://www.w3.org/ns/shacl#sourceConstraintComponent http://www.w3.org/ns/shacl#NodeConstraintComponent
Nbe8d126295fd499fa238071b00acbc97 http://www.w3.org/ns/shacl#focusNode https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1/locus/2
N4590f9557be14b859fe560015c3df420 http://www.w3.org/ns/shacl#result Nbe8d126295fd499fa238071b00acbc97
Nc33bb3fe40194a878ab0a6c697ccc466 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://www.w3.org/ns/shacl#ValidationResult
Nbe8d126295fd499fa238071b00acbc97 http://www.w3.org/ns/shacl#resultPath https://w3id.org/trace/2023/05/trov#hasArtifact
n8b1b8b4edc7c4d95b089f390198e1e04b15 http://www.w3.org/ns/shacl#maxCount 1
Nc33bb3fe40194a878ab0a6c697ccc466 http://www.w3.org/ns/shacl#resultPath https://w3id.org/trace/2023/05/trov#hasLocus
Nc33bb3fe40194a878ab0a6c697ccc466 http://www.w3.org/ns/shacl#detail N0b9fa55de7fa459ebeea155c56f75ebe
Nc33bb3fe40194a878ab0a6c697ccc466 http://www.w3.org/ns/shacl#sourceShape n8b1b8b4edc7c4d95b089f390198e1e04b14
N4590f9557be14b859fe560015c3df420 http://www.w3.org/ns/shacl#conforms false
Nc33bb3fe40194a878ab0a6c697ccc466 http://www.w3.org/ns/shacl#value https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1/locus/2
n8b1b8b4edc7c4d95b089f390198e1e04b15 http://www.w3.org/ns/shacl#path https://w3id.org/trace/2023/05/trov#hasArtifact
N4590f9557be14b859fe560015c3df420 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://www.w3.org/ns/shacl#ValidationReport
Nbe8d126295fd499fa238071b00acbc97 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://www.w3.org/ns/shacl#ValidationResult
Nc33bb3fe40194a878ab0a6c697ccc466 http://www.w3.org/ns/shacl#resultMessage Value does not conform to Shape schema1:LocusShape. See details for more information.
N0b9fa55de7fa459ebeea155c56f75ebe http://www.w3.org/ns/shacl#resultMessage Value does not have class trov:ResearchArtifact
N4590f9557be14b859fe560015c3df420 http://www.w3.org/ns/shacl#result Nc33bb3fe40194a878ab0a6c697ccc466
Nbe8d126295fd499fa238071b00acbc97 http://www.w3.org/ns/shacl#sourceConstraintComponent http://www.w3.org/ns/shacl#ClassConstraintComponent
N0b9fa55de7fa459ebeea155c56f75ebe http://www.w3.org/ns/shacl#value https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1/artifact/100
Nbe8d126295fd499fa238071b00acbc97 http://www.w3.org/ns/shacl#resultSeverity http://www.w3.org/ns/shacl#Violation
*********************************************
Validate error message: PASS
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


======= bash cell | validate tro declaration with pyshacl (arrangement links to a valid artifact) and select msg with SPARQL =======

python3 << END_PYTHON

from pyshacl import validate

tro_jsonld = """
{
    "@context": [{
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
        "trov": "https://w3id.org/trace/2023/05/trov#",
        "@base": "https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/"
    }],
    
    "@graph": [{
        "trov:hasComposition": [
        {
            "@id": "composition/1",
            "@type": "trov:ArtifactComposition",

            "trov:hasFingerprint":
            {
                "@id": "fp1",
                "@type": "trov:CompositionFingerprint",
                "trov:sha256": "sha256.fp1"
            },

            "trov:hasArtifact": [
            {
                "@id": "composition/1/artifact/1",
                "@type": "trov:ResearchArtifact",
                "trov:sha256": "art.sha256.1"
            }]
        }],
        "trov:hasArrangement": {
        "@id": "arrangement/1",
        "@type": "trov:ArtifactArrangement",
        "trov:hasLocus": [
            {
                "@id": "arrangement/1/locus/1",
                "@type": "trov:ArtifactLocus",
                "trov:hasArtifact": { "@id": "composition/1/artifact/1" },
                "trov:hasLocation": "filepath1"
            },
            {
                "@id": "arrangement/1/locus/2",
                "@type": "trov:ArtifactLocus",
                "trov:hasArtifact": { "@id": "composition/1/artifact/100" },
                "trov:hasLocation": "filepath2"
            }]
        }
    }]
}
"""

with open("data/tro.schema.ttl") as fin:
    tro_schema = fin.read()

r = validate(data_graph=tro_jsonld,
      shacl_graph=tro_schema,
      data_graph_format="json-ld",
      inference='rdfs',
      debug=True)
conforms, results_graph, results_text = r

print(results_text)

print("***"*15)
# Show triples
for s,p,o in results_graph:
    print(s, p, o)
print("***"*15)

q = """
    PREFIX : <http://www.w3.org/ns/shacl#>

    SELECT ?focus ?value ?msg
    WHERE {   
        ?curr_node :focusNode ?focus .
        ?curr_node :value ?value .
        ?curr_node :resultMessage ?msg .
        ?another_node :focusNode ?another_focus .
        FILTER (?value != ?another_focus)
        FILTER (?another_node != ?curr_node)
    }
    ORDER BY ?focus ?value ?msg
"""

for x in results_graph.query(q):
    print(x)

END_PYTHON

----------------------------------------------------------- cell outputs -----------------------------------------------------------
Validation Report
Conforms: False
Results (2):
Constraint Violation in ClassConstraintComponent (http://www.w3.org/ns/shacl#ClassConstraintComponent):
	Severity: sh:Violation
	Source Shape: [ sh:class trov:ResearchArtifact ; sh:maxCount Literal("1", datatype=xsd:integer) ; sh:minCount Literal("1", datatype=xsd:integer) ; sh:path trov:hasArtifact ]
	Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1/locus/2>
	Value Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1/artifact/100>
	Result Path: trov:hasArtifact
	Message: Value does not have class trov:ResearchArtifact
Constraint Violation in NodeConstraintComponent (http://www.w3.org/ns/shacl#NodeConstraintComponent):
	Severity: sh:Violation
	Source Shape: [ sh:minCount Literal("1", datatype=xsd:integer) ; sh:node schema1:LocusShape ; sh:path trov:hasLocus ]
	Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1>
	Value Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1/locus/2>
	Result Path: trov:hasLocus
	Message: Value does not conform to Shape schema1:LocusShape. See details for more information.
	Details:
		Constraint Violation in ClassConstraintComponent (http://www.w3.org/ns/shacl#ClassConstraintComponent):
			Severity: sh:Violation
			Source Shape: [ sh:class trov:ResearchArtifact ; sh:maxCount Literal("1", datatype=xsd:integer) ; sh:minCount Literal("1", datatype=xsd:integer) ; sh:path trov:hasArtifact ]
			Focus Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1/locus/2>
			Value Node: <https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1/artifact/100>
			Result Path: trov:hasArtifact
			Message: Value does not have class trov:ResearchArtifact

*********************************************
N6f6cf56ea33a46daac461025af38de88 http://www.w3.org/ns/shacl#sourceShape n081af2fe4da943e8be6d565697242318b15
N6f6cf56ea33a46daac461025af38de88 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://www.w3.org/ns/shacl#ValidationResult
N401e75c1df074b8281974131d755329f http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://www.w3.org/ns/shacl#ValidationResult
N401e75c1df074b8281974131d755329f http://www.w3.org/ns/shacl#detail N16e3fd98b312418c969de91fc815b6f3
N84426a3dcbac46bdac410b7d5ec983ed http://www.w3.org/ns/shacl#result N6f6cf56ea33a46daac461025af38de88
n081af2fe4da943e8be6d565697242318b15 http://www.w3.org/ns/shacl#path https://w3id.org/trace/2023/05/trov#hasArtifact
n081af2fe4da943e8be6d565697242318b14 http://www.w3.org/ns/shacl#path https://w3id.org/trace/2023/05/trov#hasLocus
N401e75c1df074b8281974131d755329f http://www.w3.org/ns/shacl#resultSeverity http://www.w3.org/ns/shacl#Violation
N84426a3dcbac46bdac410b7d5ec983ed http://www.w3.org/ns/shacl#result N401e75c1df074b8281974131d755329f
N6f6cf56ea33a46daac461025af38de88 http://www.w3.org/ns/shacl#resultSeverity http://www.w3.org/ns/shacl#Violation
N16e3fd98b312418c969de91fc815b6f3 http://www.w3.org/ns/shacl#resultMessage Value does not have class trov:ResearchArtifact
n081af2fe4da943e8be6d565697242318b15 http://www.w3.org/ns/shacl#maxCount 1
N401e75c1df074b8281974131d755329f http://www.w3.org/ns/shacl#sourceShape n081af2fe4da943e8be6d565697242318b14
N401e75c1df074b8281974131d755329f http://www.w3.org/ns/shacl#value https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1/locus/2
n081af2fe4da943e8be6d565697242318b15 http://www.w3.org/ns/shacl#class https://w3id.org/trace/2023/05/trov#ResearchArtifact
N401e75c1df074b8281974131d755329f http://www.w3.org/ns/shacl#sourceConstraintComponent http://www.w3.org/ns/shacl#NodeConstraintComponent
n081af2fe4da943e8be6d565697242318b14 http://www.w3.org/ns/shacl#node http://schema.org/LocusShape
N16e3fd98b312418c969de91fc815b6f3 http://www.w3.org/ns/shacl#resultPath https://w3id.org/trace/2023/05/trov#hasArtifact
N84426a3dcbac46bdac410b7d5ec983ed http://www.w3.org/ns/shacl#conforms false
N401e75c1df074b8281974131d755329f http://www.w3.org/ns/shacl#resultPath https://w3id.org/trace/2023/05/trov#hasLocus
N16e3fd98b312418c969de91fc815b6f3 http://www.w3.org/ns/shacl#value https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1/artifact/100
N84426a3dcbac46bdac410b7d5ec983ed http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://www.w3.org/ns/shacl#ValidationReport
N6f6cf56ea33a46daac461025af38de88 http://www.w3.org/ns/shacl#resultPath https://w3id.org/trace/2023/05/trov#hasArtifact
N6f6cf56ea33a46daac461025af38de88 http://www.w3.org/ns/shacl#resultMessage Value does not have class trov:ResearchArtifact
N16e3fd98b312418c969de91fc815b6f3 http://www.w3.org/ns/shacl#focusNode https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1/locus/2
n081af2fe4da943e8be6d565697242318b15 http://www.w3.org/ns/shacl#minCount 1
N16e3fd98b312418c969de91fc815b6f3 http://www.w3.org/ns/shacl#sourceConstraintComponent http://www.w3.org/ns/shacl#ClassConstraintComponent
N401e75c1df074b8281974131d755329f http://www.w3.org/ns/shacl#resultMessage Value does not conform to Shape schema1:LocusShape. See details for more information.
N6f6cf56ea33a46daac461025af38de88 http://www.w3.org/ns/shacl#focusNode https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1/locus/2
N16e3fd98b312418c969de91fc815b6f3 http://www.w3.org/ns/shacl#sourceShape n081af2fe4da943e8be6d565697242318b15
n081af2fe4da943e8be6d565697242318b14 http://www.w3.org/ns/shacl#minCount 1
N6f6cf56ea33a46daac461025af38de88 http://www.w3.org/ns/shacl#value https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1/artifact/100
N16e3fd98b312418c969de91fc815b6f3 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://www.w3.org/ns/shacl#ValidationResult
N6f6cf56ea33a46daac461025af38de88 http://www.w3.org/ns/shacl#sourceConstraintComponent http://www.w3.org/ns/shacl#ClassConstraintComponent
N16e3fd98b312418c969de91fc815b6f3 http://www.w3.org/ns/shacl#resultSeverity http://www.w3.org/ns/shacl#Violation
N401e75c1df074b8281974131d755329f http://www.w3.org/ns/shacl#focusNode https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1
*********************************************
(rdflib.term.URIRef('https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1/locus/2'), rdflib.term.URIRef('https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1/artifact/100'), rdflib.term.Literal('Value does not have class trov:ResearchArtifact'))
(rdflib.term.URIRef('https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1/locus/2'), rdflib.term.URIRef('https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1/artifact/100'), rdflib.term.Literal('Value does not have class trov:ResearchArtifact'))
(rdflib.term.URIRef('https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1/locus/2'), rdflib.term.URIRef('https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1/artifact/100'), rdflib.term.Literal('Value does not have class trov:ResearchArtifact'))
(rdflib.term.URIRef('https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/arrangement/1/locus/2'), rdflib.term.URIRef('https://github.com/transparency-certified/trace-model/tree/master/demo/01-trov-examples/01-two-artifacts-no-trp/composition/1/artifact/100'), rdflib.term.Literal('Value does not have class trov:ResearchArtifact'))
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



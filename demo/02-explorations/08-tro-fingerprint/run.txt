=============================== bash cell | get fingerprint based on tro_fingerprint.py (directory) ================================

tro_fingerprint -d data/message

----------------------------------------------------------- cell outputs -----------------------------------------------------------
414e9a71745d2dcceb72c25d46ed771ed9221676d49186766dc07eae2a00e317
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


================================== bash cell | get fingerprint based on tro_fingerprint.py (file) ==================================

tro_fingerprint -f data/message/bar.txt,data/message/foo.txt,data/message/baz/baz.txt

----------------------------------------------------------- cell outputs -----------------------------------------------------------
414e9a71745d2dcceb72c25d46ed771ed9221676d49186766dc07eae2a00e317
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


=========================== bash cell | get fingerprint based on tro_fingerprint.py (directory and file) ===========================

tro_fingerprint -d data/message/baz -f data/message/bar.txt,data/message/foo.txt

----------------------------------------------------------- cell outputs -----------------------------------------------------------
414e9a71745d2dcceb72c25d46ed771ed9221676d49186766dc07eae2a00e317
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


============================ bash cell | create tro manifest containing the digest of data (directory) =============================
python3 << END_PYTHON
from trace_model.tro_fingerprint import compute_fingerprint
import json

fingerprint = compute_fingerprint(arg_dir="data/message", arg_file=None)

fout = open("products/tro.jsonld", mode="w", encoding="utf-8")
jsonld_content = {
    "@context": [{
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "trov": "https://w3id.org/trace/2022/10/trov#"
    }],

    "@graph": [{

        "@id": "trov:tro/01",
        "@type": "trov:ResearchObject",

        "trov:generatedBySystem": { "@id": "trov:system/01" },
        "trov:fingerprint": fingerprint
    }]
}
json.dump(jsonld_content, fout, indent=4)

fout.close()
END_PYTHON
cat products/tro.jsonld
----------------------------------------------------------- cell outputs -----------------------------------------------------------
{
    "@context": [
        {
            "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
            "trov": "https://w3id.org/trace/2022/10/trov#"
        }
    ],
    "@graph": [
        {
            "@id": "trov:tro/01",
            "@type": "trov:ResearchObject",
            "trov:generatedBySystem": {
                "@id": "trov:system/01"
            },
            "trov:fingerprint": "414e9a71745d2dcceb72c25d46ed771ed9221676d49186766dc07eae2a00e317"
        }
    ]
}^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


=============================== bash cell | create tro manifest containing the digest of data (file) ===============================
python3 << END_PYTHON
from trace_model.tro_fingerprint import compute_fingerprint
import json

fingerprint = compute_fingerprint(arg_dir=None, arg_file="data/message/bar.txt,data/message/foo.txt,data/message/baz/baz.txt")

fout = open("products/tro.jsonld", mode="w", encoding="utf-8")
jsonld_content = {
    "@context": [{
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "trov": "https://w3id.org/trace/2022/10/trov#"
    }],

    "@graph": [{

        "@id": "trov:tro/01",
        "@type": "trov:ResearchObject",

        "trov:generatedBySystem": { "@id": "trov:system/01" },
        "trov:fingerprint": fingerprint
    }]
}
json.dump(jsonld_content, fout, indent=4)

fout.close()
END_PYTHON
cat products/tro.jsonld
----------------------------------------------------------- cell outputs -----------------------------------------------------------
{
    "@context": [
        {
            "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
            "trov": "https://w3id.org/trace/2022/10/trov#"
        }
    ],
    "@graph": [
        {
            "@id": "trov:tro/01",
            "@type": "trov:ResearchObject",
            "trov:generatedBySystem": {
                "@id": "trov:system/01"
            },
            "trov:fingerprint": "414e9a71745d2dcceb72c25d46ed771ed9221676d49186766dc07eae2a00e317"
        }
    ]
}^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


======================== bash cell | create tro manifest containing the digest of data (directory and file) ========================
python3 << END_PYTHON
from trace_model.tro_fingerprint import compute_fingerprint
import json

fingerprint = compute_fingerprint(arg_dir="data/message/baz", arg_file="data/message/bar.txt,data/message/foo.txt")

fout = open("products/tro.jsonld", mode="w", encoding="utf-8")
jsonld_content = {
    "@context": [{
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "trov": "https://w3id.org/trace/2022/10/trov#"
    }],

    "@graph": [{

        "@id": "trov:tro/01",
        "@type": "trov:ResearchObject",

        "trov:generatedBySystem": { "@id": "trov:system/01" },
        "trov:fingerprint": fingerprint
    }]
}
json.dump(jsonld_content, fout, indent=4)

fout.close()
END_PYTHON
cat products/tro.jsonld
----------------------------------------------------------- cell outputs -----------------------------------------------------------
{
    "@context": [
        {
            "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
            "trov": "https://w3id.org/trace/2022/10/trov#"
        }
    ],
    "@graph": [
        {
            "@id": "trov:tro/01",
            "@type": "trov:ResearchObject",
            "trov:generatedBySystem": {
                "@id": "trov:system/01"
            },
            "trov:fingerprint": "414e9a71745d2dcceb72c25d46ed771ed9221676d49186766dc07eae2a00e317"
        }
    ]
}^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


================== bash cell | test different filenames: get fingerprint based on tro_fingerprint.py (directory) ===================

tro_fingerprint -d data/message_with_diff_filenames

----------------------------------------------------------- cell outputs -----------------------------------------------------------
414e9a71745d2dcceb72c25d46ed771ed9221676d49186766dc07eae2a00e317
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


===================== bash cell | test different filenames: get fingerprint based on tro_fingerprint.py (file) =====================

tro_fingerprint -f data/message_with_diff_filenames/test1.txt,data/message_with_diff_filenames/test2.txt,data/message_with_diff_filenames/test3/test3.txt

----------------------------------------------------------- cell outputs -----------------------------------------------------------
414e9a71745d2dcceb72c25d46ed771ed9221676d49186766dc07eae2a00e317
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


============== bash cell | test different filenames: get fingerprint based on tro_fingerprint.py (directory and file) ==============

tro_fingerprint -d data/message_with_diff_filenames/test3 -f data/message_with_diff_filenames/test1.txt,data/message_with_diff_filenames/test2.txt

----------------------------------------------------------- cell outputs -----------------------------------------------------------
414e9a71745d2dcceb72c25d46ed771ed9221676d49186766dc07eae2a00e317
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


=============== bash cell | test different filenames: create tro manifest containing the digest of data (directory) ================
python3 << END_PYTHON
from trace_model.tro_fingerprint import compute_fingerprint
import json

fingerprint = compute_fingerprint(arg_dir="data/message_with_diff_filenames", arg_file=None)

fout = open("products/tro.jsonld", mode="w", encoding="utf-8")
jsonld_content = {
    "@context": [{
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "trov": "https://w3id.org/trace/2022/10/trov#"
    }],

    "@graph": [{

        "@id": "trov:tro/01",
        "@type": "trov:ResearchObject",

        "trov:generatedBySystem": { "@id": "trov:system/01" },
        "trov:fingerprint": fingerprint
    }]
}
json.dump(jsonld_content, fout, indent=4)

fout.close()
END_PYTHON
cat products/tro.jsonld
----------------------------------------------------------- cell outputs -----------------------------------------------------------
{
    "@context": [
        {
            "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
            "trov": "https://w3id.org/trace/2022/10/trov#"
        }
    ],
    "@graph": [
        {
            "@id": "trov:tro/01",
            "@type": "trov:ResearchObject",
            "trov:generatedBySystem": {
                "@id": "trov:system/01"
            },
            "trov:fingerprint": "414e9a71745d2dcceb72c25d46ed771ed9221676d49186766dc07eae2a00e317"
        }
    ]
}^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


================== bash cell | test different filenames: create tro manifest containing the digest of data (file) ==================
python3 << END_PYTHON
from trace_model.tro_fingerprint import compute_fingerprint
import json

fingerprint = compute_fingerprint(arg_dir=None, arg_file="data/message_with_diff_filenames/test1.txt,data/message_with_diff_filenames/test2.txt,data/message_with_diff_filenames/test3/test3.txt")

fout = open("products/tro.jsonld", mode="w", encoding="utf-8")
jsonld_content = {
    "@context": [{
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "trov": "https://w3id.org/trace/2022/10/trov#"
    }],

    "@graph": [{

        "@id": "trov:tro/01",
        "@type": "trov:ResearchObject",

        "trov:generatedBySystem": { "@id": "trov:system/01" },
        "trov:fingerprint": fingerprint
    }]
}
json.dump(jsonld_content, fout, indent=4)

fout.close()
END_PYTHON
cat products/tro.jsonld
----------------------------------------------------------- cell outputs -----------------------------------------------------------
{
    "@context": [
        {
            "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
            "trov": "https://w3id.org/trace/2022/10/trov#"
        }
    ],
    "@graph": [
        {
            "@id": "trov:tro/01",
            "@type": "trov:ResearchObject",
            "trov:generatedBySystem": {
                "@id": "trov:system/01"
            },
            "trov:fingerprint": "414e9a71745d2dcceb72c25d46ed771ed9221676d49186766dc07eae2a00e317"
        }
    ]
}^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


=========== bash cell | test different filenames: create tro manifest containing the digest of data (directory and file) ===========
python3 << END_PYTHON
from trace_model.tro_fingerprint import compute_fingerprint
import json

fingerprint = compute_fingerprint(arg_dir="data/message_with_diff_filenames/test3", arg_file="data/message_with_diff_filenames/test1.txt,data/message_with_diff_filenames/test2.txt")

fout = open("products/tro.jsonld", mode="w", encoding="utf-8")
jsonld_content = {
    "@context": [{
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "trov": "https://w3id.org/trace/2022/10/trov#"
    }],

    "@graph": [{

        "@id": "trov:tro/01",
        "@type": "trov:ResearchObject",

        "trov:generatedBySystem": { "@id": "trov:system/01" },
        "trov:fingerprint": fingerprint
    }]
}
json.dump(jsonld_content, fout, indent=4)

fout.close()
END_PYTHON
cat products/tro.jsonld
----------------------------------------------------------- cell outputs -----------------------------------------------------------
{
    "@context": [
        {
            "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
            "trov": "https://w3id.org/trace/2022/10/trov#"
        }
    ],
    "@graph": [
        {
            "@id": "trov:tro/01",
            "@type": "trov:ResearchObject",
            "trov:generatedBySystem": {
                "@id": "trov:system/01"
            },
            "trov:fingerprint": "414e9a71745d2dcceb72c25d46ed771ed9221676d49186766dc07eae2a00e317"
        }
    ]
}^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


